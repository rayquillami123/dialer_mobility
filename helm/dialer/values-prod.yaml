# Imágenes firmadas/publicadas por tu pipeline
image:
  backend: ghcr.io/ORG/dialer-backend:v1.2.3
  frontend: ghcr.io/ORG/dialer-frontend:v1.2.3
  freeswitch: signalwire/freeswitch:latest

ingress:
  enabled: true
  className: nginx
  tlsSecret: tls-dialer
  hosts:
    api: api.midominio.com
    app: app.midominio.com

# Backend/Frontend (igual que tu chart)
env:
  NEXT_PUBLIC_API: https://api.midominio.com
  NEXT_PUBLIC_WS: wss://api.midominio.com/ws
  PORT: "8080"
  CORS_ORIGIN: https://app.midominio.com
  JWT_ACCESS_SECRET: ""     # usar ExternalSecrets/SealedSecrets
  JWT_REFRESH_SECRET: ""    # idem
  DATABASE_URL: postgresql://dialer:strongpass@postgresql.dialer.svc:5432/dialer
  REDIS_URL: redis://redis.dialer.svc:6379
  ESL_HOST: dialer-freeswitch-esl.dialer.svc.cluster.local
  ESL_PORT: "8021"
  ESL_PASSWORD: ClueCon
  CDR_INGEST_TOKEN: ""

replicas:
  backend: 3
  frontend: 3

# ---------- FreeSWITCH ----------
freeswitch:
  enabled: true
  replicas: 1   # Recomendado 1 por nodo, con SBC delante. Escala horizontal con varios nodos FS.
  sip:
    udp: 5060
    tcp: 5060
  esl:
    port: 8021
  rtp:
    start: 16384
    end: 32768
  conf:
    configMapName: freeswitch-conf   # creado con --from-file=freeswitch/conf
  recordings:
    pvcName: dialer-recordings-pvc   # crea el PVC según tu storageclass
  nodeSelector:
    nodepool: "media-rtp"            # pool dedicado a media (opcional)
  tolerations:
    - key: "workload"
      operator: "Equal"
      value: "media"
      effect: "NoSchedule"
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchLabels: { app: dialer-freeswitch }
          topologyKey: kubernetes.io/hostname
  resources:
    requests: { cpu: "4000m", memory: "8Gi" }
    limits:   { cpu: "12000m", memory: "16Gi" }
  service:
    esl:
      enabled: true         # Service ClusterIP sólo para ESL

# ---------- HPA (ejemplo) ----------
# Puedes poner HPA para backend/frontend; para FS se recomienda escala manual + SBC.
hpa:
  backend:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    cpu:
      targetAverageUtilization: 70
  frontend:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    cpu:
      targetAverageUtilization: 60

# ---------- ExternalSecrets (opcional) ----------
# Ejemplo conceptual (no se renderiza aquí): mantén secretos JWT/DB en tu gestor
externalsecrets:
  enabled: true
  secretStoreRef:
    kind: ClusterSecretStore
    name: dialer-secrets-store
  targetSecretName: dialer-env
  data:
    - secretKey: JWT_ACCESS_SECRET
      remoteRef: { key: /dialer/prod/jwt_access }
    - secretKey: JWT_REFRESH_SECRET
      remoteRef: { key: /dialer/prod/jwt_refresh }
    - secretKey: DATABASE_URL
      remoteRef: { key: /dialer/prod/database_url }
    - secretKey: CDR_INGEST_TOKEN
      remoteRef: { key: /dialer/prod/cdr_token }
    - secretKey: ESL_PASSWORD
      remoteRef: { key: /dialer/prod/esl_password }

# ---------- Sysctl DaemonSet ----------
sysctl:
  enabled: true
  image: alpine:3.19
  params:
    fs.file-max: "2000000"
    net.core.somaxconn: "65535"
    net.core.netdev_max_backlog: "250000"
    net.core.rmem_max: "33554432"
    net.core.wmem_max: "33554432"
    net.core.rmem_default: "4194304"
    net.core.wmem_default: "4194304"
    net.ipv4.udp_rmem_min: "131072"
    net.ipv4.udp_wmem_min: "131072"
    net.ipv4.udp_mem: "262144 524288 1048576"
    net.ipv4.ip_local_port_range: "1024 65000"
  nodeSelector: { nodepool: "media-rtp" }
  tolerations:
    - key: "workload"
      operator: "Equal"
      value: "media"
      effect: "NoSchedule"
